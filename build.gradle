plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
	id "com.google.protobuf" version "0.9.4"
	id 'org.jetbrains.kotlin.jvm' version '1.8.0'
}


group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}
protobuf {
	protoc {
		path = './java/proto/Customer.proto'
	}
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'junit:junit:4.13.1'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'

//	implementation 'com.google.protobuf:protobuf-javalite:3.8.0'//구글 프로토콜 버퍼 설정
	implementation 'com.google.protobuf:protobuf-java:4.27.2'

	//HAL(Hypertext Application Language) 링크의 정보를 JSON으로 표현하는 표준 통칭 HAL
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
//	implementation  'org.springframework.boot:spring-boot-starter-actuater'
//	implementation 'org.springframework.data:spring-data-rest-hal-brower'
	implementation "org.springframework.boot:spring-boot-test-autoconfigure:3.3.1"
	implementation "org.springframework.restdocs:spring-restdocs-mockmvc"
}

tasks.named('test') {
	useJUnitPlatform()
}
compileKotlin {
	kotlinOptions {
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		jvmTarget = "1.8"
	}
}
